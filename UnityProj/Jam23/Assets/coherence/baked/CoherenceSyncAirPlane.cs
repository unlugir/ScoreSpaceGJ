// Copyright (c) coherence ApS.
// For all coherence generated code, the coherence SDK license terms apply. See the license file in the coherence Package root folder for more information.

// <auto-generated>
// Generated file. DO NOT EDIT!
// </auto-generated>
namespace Coherence.Generated
{
	using System;
	using System.Collections.Generic;
	using System.Linq;
	using UnityEngine;
	using Coherence.Toolkit;
	using Coherence.Toolkit.Bindings;
	using Coherence.Entity;
	using Coherence.ProtocolDef;
	using Coherence.Brook;
	using Coherence.Toolkit.Bindings.ValueBindings;
	using Coherence.Toolkit.Bindings.TransformBindings;
	using Coherence.Connection;
	using Coherence.Log;
	using Logger = Coherence.Log.Logger;
	using UnityEngine.Scripting;

	public class Binding_09976bcb73301c3418068123caa6a5c5_a582810c_fab5_4812_aec1_f9f441c1126e : PositionBinding
	{
		public override string CoherenceComponentName => "WorldPosition";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Vector3 Value
		{
			get => (Vector3)(UnityEngine.Vector3)(coherenceSync.coherencePosition);
			set => coherenceSync.coherencePosition = (UnityEngine.Vector3)(value);
		}

		protected override Vector3 ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
		{
			var value = ((WorldPosition)coherenceComponent).value;
			if (!coherenceSync.HasParentWithCoherenceSync)
            {
                value += floatingOriginDelta;
            }
			return value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (WorldPosition)coherenceComponent;
			update.value = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new WorldPosition();
		}
	}

	public class Binding_09976bcb73301c3418068123caa6a5c5_eb917898_8fd6_49fc_9283_80e4b36173b0 : RotationBinding
	{
		public override string CoherenceComponentName => "WorldOrientation";

		public override uint FieldMask => 0b00000000000000000000000000000001;

		public override Quaternion Value
		{
			get => (Quaternion)(UnityEngine.Quaternion)(coherenceSync.coherenceRotation);
			set => coherenceSync.coherenceRotation = (UnityEngine.Quaternion)(value);
		}

		protected override Quaternion ReadComponentData(ICoherenceComponentData coherenceComponent, Vector3 floatingOriginDelta)
		{
			var value = ((WorldOrientation)coherenceComponent).value;
			return value;
		}
		
		public override ICoherenceComponentData WriteComponentData(ICoherenceComponentData coherenceComponent)
		{
			var update = (WorldOrientation)coherenceComponent;
			update.value = Value;
			return update;
		}

		public override ICoherenceComponentData CreateComponentData()
		{
			return new WorldOrientation();
		}
	}


	[Preserve]
	[AddComponentMenu("coherence/Baked/Baked 'AirPlane' (auto assigned)")]
	[RequireComponent(typeof(CoherenceSync))]
	public class CoherenceSyncAirPlane : CoherenceSyncBaked
	{
		private CoherenceSync coherenceSync;
		private Logger logger;

		// Cached targets for commands		
		private DebugController AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6_CommandTarget;		
		private DebugController AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed_CommandTarget;

		private IClient client;
		private CoherenceMonoBridge monoBridge => coherenceSync.MonoBridge;

		protected void Awake()
		{
			coherenceSync = GetComponent<CoherenceSync>();
			coherenceSync.usingReflection = false;

			logger = coherenceSync.logger.With<CoherenceSyncAirPlane>();
			if (coherenceSync.TryGetBindingByGuid("369f8701-4372-4e48-a006-a9d3b5f7e8d6", "KillPlane", out Binding AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6))
			{
				AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6_CommandTarget = (DebugController)AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6.UnityComponent;
				coherenceSync.AddCommandRequestDelegate("DebugController.KillPlane", "()",
				SendCommand_AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6, ReceiveLocalCommand_AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6, MessageTarget.All, AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6_CommandTarget,false);
			}
			else
			{
				logger.Error("Couldn't find command binding (KillPlane)");
			}
			if (coherenceSync.TryGetBindingByGuid("1c0d4ec9-5375-42c3-afd5-8a9c1180e7ed", "ResetPlane", out Binding AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed))
			{
				AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed_CommandTarget = (DebugController)AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed.UnityComponent;
				coherenceSync.AddCommandRequestDelegate("DebugController.ResetPlane", "()",
				SendCommand_AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed, ReceiveLocalCommand_AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed, MessageTarget.All, AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed_CommandTarget,false);
			}
			else
			{
				logger.Error("Couldn't find command binding (ResetPlane)");
			}
			if (coherenceSync.TryGetBindingByGuid("a582810c-fab5-4812-aec1-f9f441c1126e", "position", out Binding InternalWorldPosition_Translation_value))
			{
				var clone = new Binding_09976bcb73301c3418068123caa6a5c5_a582810c_fab5_4812_aec1_f9f441c1126e();
				InternalWorldPosition_Translation_value.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalWorldPosition_Translation_value)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (UnityEngine.Transform).position");
			}
			if (coherenceSync.TryGetBindingByGuid("eb917898-8fd6-49fc-9283-80e4b36173b0", "rotation", out Binding InternalWorldOrientation_Rotation_value))
			{
				var clone = new Binding_09976bcb73301c3418068123caa6a5c5_eb917898_8fd6_49fc_9283_80e4b36173b0();
				InternalWorldOrientation_Rotation_value.CloneTo(clone);
				coherenceSync.Bindings[coherenceSync.Bindings.IndexOf(InternalWorldOrientation_Rotation_value)] = clone;
			}
			else
			{
				logger.Error("Couldn't find binding (UnityEngine.Transform).rotation");
			}
		}

		public override List<ICoherenceComponentData> CreateEntity()
		{
			if (coherenceSync.UsesLODsAtRuntime && (Archetypes.IndexForName.TryGetValue(coherenceSync.Archetype.ArchetypeName, out int archetypeIndex)))
			{
				var components = new List<ICoherenceComponentData>()
				{
					new ArchetypeComponent
					{
						index = archetypeIndex
					}
				};

				return components;
			}
			else
			{
				logger.Warning($"Unable to find archetype {coherenceSync.Archetype.ArchetypeName} in dictionary. Please, bake manually (coherence > Bake)");
			}

			return null;
		}

		public override void Initialize(CoherenceSync sync, IClient client)
		{
			if (coherenceSync == null)
			{
				coherenceSync = sync;
			}
			this.client = client;
		}
		void SendCommand_AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6(MessageTarget target, object[] args)
		{
			var command = new AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6();
			client.SendCommand(command, target, coherenceSync.EntityID);
		}

		void ReceiveLocalCommand_AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6(MessageTarget target, object[] args)
		{
			var command = new AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6();
			ReceiveCommand_AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6(command);
		}

		void ReceiveCommand_AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6(AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6 command)
		{
			var target = AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6_CommandTarget;
			target.KillPlane();
		}
		void SendCommand_AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed(MessageTarget target, object[] args)
		{
			var command = new AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed();
			client.SendCommand(command, target, coherenceSync.EntityID);
		}

		void ReceiveLocalCommand_AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed(MessageTarget target, object[] args)
		{
			var command = new AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed();
			ReceiveCommand_AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed(command);
		}

		void ReceiveCommand_AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed(AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed command)
		{
			var target = AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed_CommandTarget;
			target.ResetPlane();
		}

		public override void ReceiveCommand(IEntityCommand command)
		{
			switch(command)
			{
				case AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6 castedCommand:
					ReceiveCommand_AirPlane_DebugController__char_46_KillPlane_369f8701_4372_4e48_a006_a9d3b5f7e8d6(castedCommand);
					break;
				case AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed castedCommand:
					ReceiveCommand_AirPlane_DebugController__char_46_ResetPlane_1c0d4ec9_5375_42c3_afd5_8a9c1180e7ed(castedCommand);
					break;
				default:
					logger.Warning($"[CoherenceSyncAirPlane] Unhandled command: {command.GetType()}.");
					break;
			}
		}
	}
}
